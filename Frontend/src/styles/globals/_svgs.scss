@use "sass:math";

$search-icon: '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.34615 12.6923C9.85104 12.6923 12.6923 9.85104 12.6923 6.34615C12.6923 2.84127 9.85104 0 6.34615 0C2.84127 0 0 2.84127 0 6.34615C0 9.85104 2.84127 12.6923 6.34615 12.6923Z" fill="white"/><path d="M6.34614 12.1154C9.53239 12.1154 12.1154 9.53242 12.1154 6.34617C12.1154 3.15991 9.53239 0.576935 6.34614 0.576935C3.15988 0.576935 0.576904 3.15991 0.576904 6.34617C0.576904 9.53242 3.15988 12.1154 6.34614 12.1154Z" stroke="#A2A2A2"/><path d="M14.6465 15.3536C14.8417 15.5488 15.1583 15.5488 15.3536 15.3536C15.5488 15.1583 15.5488 14.8417 15.3536 14.6464L14.6465 15.3536ZM10.0311 10.7382L14.6465 15.3536L15.3536 14.6464L10.7382 10.0311L10.0311 10.7382Z" fill="#A2A2A2"/></svg>';
$back-icon: '<svg width="22" height="8" viewBox="0 0 22 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 4.5C21.2761 4.5 21.5 4.27614 21.5 4C21.5 3.72386 21.2761 3.5 21 3.5L21 4.5ZM0.646446 3.64645C0.451185 3.84171 0.451185 4.15829 0.646446 4.35356L3.82843 7.53554C4.02369 7.7308 4.34027 7.7308 4.53553 7.53554C4.7308 7.34027 4.7308 7.02369 4.53553 6.82843L1.70711 4L4.53553 1.17157C4.7308 0.976312 4.7308 0.65973 4.53553 0.464468C4.34027 0.269205 4.02369 0.269205 3.82843 0.464468L0.646446 3.64645ZM21 3.5L1 3.5L1 4.5L21 4.5L21 3.5Z" fill="#A2A2A2"/></svg>';
$calendar-icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 12H13C12.45 12 12 12.45 12 13V16C12 16.55 12.45 17 13 17H16C16.55 17 17 16.55 17 16V13C17 12.45 16.55 12 16 12ZM16 2V3H8V2C8 1.45 7.55 1 7 1C6.45 1 6 1.45 6 2V3H5C3.89 3 3.01 3.9 3.01 5L3 19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3H18V2C18 1.45 17.55 1 17 1C16.45 1 16 1.45 16 2ZM18 19H6C5.45 19 5 18.55 5 18V8H19V18C19 18.55 18.55 19 18 19Z" fill="#A2A2A2"/></svg>';
$select-arrow: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_30_675)"><path d="M8.70956 11.71L11.2996 14.3C11.6896 14.69 12.3196 14.69 12.7096 14.3L15.2996 11.71C15.9296 11.08 15.4796 10 14.5896 10L9.40956 10C8.51956 10 8.07956 11.08 8.70956 11.71Z" fill="#A2A2A2"/></g><defs><clipPath id="clip0_30_675"><rect width="24" height="24" fill="white" transform="translate(0 24) rotate(-90)"/></clipPath></defs></svg>';
$location-icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 12C13.1 12 14 11.1 14 10C14 8.9 13.1 8 12 8C10.9 8 10 8.9 10 10C10 11.1 10.9 12 12 12ZM12 2C16.2 2 20 5.22 20 10.2C20 13.38 17.55 17.12 12.66 21.43C12.28 21.76 11.71 21.76 11.33 21.43C6.45 17.12 4 13.38 4 10.2C4 5.22 7.8 2 12 2Z" fill="#214975"/></svg>';
$checkmark-icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.00014 16.1699L5.53014 12.6999C5.14014 12.3099 4.51014 12.3099 4.12014 12.6999C3.73014 13.0899 3.73014 13.7199 4.12014 14.1099L8.30014 18.2899C8.69014 18.6799 9.32014 18.6799 9.71014 18.2899L20.2901 7.70995C20.6801 7.31995 20.6801 6.68995 20.2901 6.29995C19.9001 5.90995 19.2701 5.90995 18.8801 6.29995L9.00014 16.1699Z" fill="#214975"/></svg>';
$menu-icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 11H20C20.55 11 21 11.45 21 12C21 12.55 20.55 13 20 13H4C3.45 13 3 12.55 3 12C3 11.45 3.45 11 4 11ZM20 18H10C9.45 18 9 17.55 9 17C9 16.45 9.45 16 10 16H20C20.55 16 21 16.45 21 17C21 17.55 20.55 18 20 18ZM4 6H20C20.55 6 21 6.45 21 7V7.01C21 7.56 20.55 8.01 20 8.01H4C3.45 8.01 3 7.56 3 7.01V7C3 6.45 3.45 6 4 6Z" fill="#214975"/></svg>';
$make-transfer: '<svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 3.00003V1.21003C8 0.760031 7.46 0.540031 7.15 0.860031L4.35 3.65003C4.15 3.85003 4.15 4.16003 4.35 4.36003L7.14 7.15003C7.46 7.46003 8 7.24003 8 6.79003V5.00003C11.31 5.00003 14 7.69003 14 11C14 11.79 13.85 12.56 13.56 13.25C13.41 13.61 13.52 14.02 13.79 14.29C14.3 14.8 15.16 14.62 15.43 13.95C15.8 13.04 16 12.04 16 11C16 6.58003 12.42 3.00003 8 3.00003ZM8 17C4.69 17 2 14.31 2 11C2 10.21 2.15 9.44003 2.44 8.75003C2.59 8.39003 2.48 7.98003 2.21 7.71003C1.7 7.20003 0.84 7.38003 0.57 8.05003C0.2 8.96003 0 9.96003 0 11C0 15.42 3.58 19 8 19V20.79C8 21.24 8.54 21.46 8.85 21.14L11.64 18.35C11.84 18.15 11.84 17.84 11.64 17.64L8.85 14.85C8.54 14.54 8 14.76 8 15.21V17Z" fill="#214975"/></svg>';
$close: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18.3 5.70997C17.91 5.31997 17.28 5.31997 16.89 5.70997L12 10.59L7.10997 5.69997C6.71997 5.30997 6.08997 5.30997 5.69997 5.69997C5.30997 6.08997 5.30997 6.71997 5.69997 7.10997L10.59 12L5.69997 16.89C5.30997 17.28 5.30997 17.91 5.69997 18.3C6.08997 18.69 6.71997 18.69 7.10997 18.3L12 13.41L16.89 18.3C17.28 18.69 17.91 18.69 18.3 18.3C18.69 17.91 18.69 17.28 18.3 16.89L13.41 12L18.3 7.10997C18.68 6.72997 18.68 6.08997 18.3 5.70997V5.70997Z" fill="#214975"/></svg>';

@function svg-url($svg) {
    @if not str-index($svg, xmlns) {
      $svg: str-replace($svg, "<svg", '<svg xmlns="http://www.w3.org/2000/svg"');
    }
    //  Chunk up string in order to avoid
    //  "stack level too deep" error
    $encoded: "";
    $slice: 2000;
    $index: 0;
    $loops: ceil(math.div(str-length($svg), $slice));
    @for $i from 1 through $loops {
      $chunk: str-slice($svg, $index, $index + $slice - 1);
      //   Encode
      $chunk: str-replace($chunk, '"', "'");
      $chunk: str-replace($chunk, "%", "%25");
      $chunk: str-replace($chunk, "&", "%26");
      $chunk: str-replace($chunk, "#", "%23");
      $chunk: str-replace($chunk, "{", "%7B");
      $chunk: str-replace($chunk, "}", "%7D");
      $chunk: str-replace($chunk, "<", "%3C");
      $chunk: str-replace($chunk, ">", "%3E");
  
      //
      //    The maybe list
      //
      //    Keep size and compile time down
      //    ... only add on documented fail
      //
      //  $chunk: str-replace($chunk, '|', '%7C');
      //  $chunk: str-replace($chunk, '[', '%5B');
      //  $chunk: str-replace($chunk, ']', '%5D');
      //  $chunk: str-replace($chunk, '^', '%5E');
      //  $chunk: str-replace($chunk, '`', '%60');
      //  $chunk: str-replace($chunk, ';', '%3B');
      //  $chunk: str-replace($chunk, '?', '%3F');
      //  $chunk: str-replace($chunk, ':', '%3A');
      //  $chunk: str-replace($chunk, '@', '%40');
      //  $chunk: str-replace($chunk, '=', '%3D');
  
      $encoded: #{$encoded}#{$chunk};
      $index: $index + $slice;
    }
    @return url("data:image/svg+xml,#{$encoded}");
  }
  
  //  Background svg mixin
  @mixin background-svg($svg) {
    background-image: svg-url($svg);
  }
  
  //  Helper function to replace characters in a string
  @function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @return if(
      $index,
      str-slice($string, 1, $index - 1) + $replace +
        str-replace(
          str-slice($string, $index + str-length($search)),
          $search,
          $replace
        ),
      $string
    );
  }
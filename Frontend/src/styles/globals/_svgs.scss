$search-icon: '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.34615 12.6923C9.85104 12.6923 12.6923 9.85104 12.6923 6.34615C12.6923 2.84127 9.85104 0 6.34615 0C2.84127 0 0 2.84127 0 6.34615C0 9.85104 2.84127 12.6923 6.34615 12.6923Z" fill="white"/><path d="M6.34614 12.1154C9.53239 12.1154 12.1154 9.53242 12.1154 6.34617C12.1154 3.15991 9.53239 0.576935 6.34614 0.576935C3.15988 0.576935 0.576904 3.15991 0.576904 6.34617C0.576904 9.53242 3.15988 12.1154 6.34614 12.1154Z" stroke="#A2A2A2"/><path d="M14.6465 15.3536C14.8417 15.5488 15.1583 15.5488 15.3536 15.3536C15.5488 15.1583 15.5488 14.8417 15.3536 14.6464L14.6465 15.3536ZM10.0311 10.7382L14.6465 15.3536L15.3536 14.6464L10.7382 10.0311L10.0311 10.7382Z" fill="#A2A2A2"/></svg>';
$back-icon: '<svg width="22" height="8" viewBox="0 0 22 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 4.5C21.2761 4.5 21.5 4.27614 21.5 4C21.5 3.72386 21.2761 3.5 21 3.5L21 4.5ZM0.646446 3.64645C0.451185 3.84171 0.451185 4.15829 0.646446 4.35356L3.82843 7.53554C4.02369 7.7308 4.34027 7.7308 4.53553 7.53554C4.7308 7.34027 4.7308 7.02369 4.53553 6.82843L1.70711 4L4.53553 1.17157C4.7308 0.976312 4.7308 0.65973 4.53553 0.464468C4.34027 0.269205 4.02369 0.269205 3.82843 0.464468L0.646446 3.64645ZM21 3.5L1 3.5L1 4.5L21 4.5L21 3.5Z" fill="#A2A2A2"/></svg>';
$calendar-icon: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 12H13C12.45 12 12 12.45 12 13V16C12 16.55 12.45 17 13 17H16C16.55 17 17 16.55 17 16V13C17 12.45 16.55 12 16 12ZM16 2V3H8V2C8 1.45 7.55 1 7 1C6.45 1 6 1.45 6 2V3H5C3.89 3 3.01 3.9 3.01 5L3 19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3H18V2C18 1.45 17.55 1 17 1C16.45 1 16 1.45 16 2ZM18 19H6C5.45 19 5 18.55 5 18V8H19V18C19 18.55 18.55 19 18 19Z" fill="#A2A2A2"/></svg>';




@function svg-url($svg) {
    @if not str-index($svg, xmlns) {
      $svg: str-replace($svg, "<svg", '<svg xmlns="http://www.w3.org/2000/svg"');
    }
    //  Chunk up string in order to avoid
    //  "stack level too deep" error
    $encoded: "";
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg) / $slice);
    @for $i from 1 through $loops {
      $chunk: str-slice($svg, $index, $index + $slice - 1);
      //   Encode
      $chunk: str-replace($chunk, '"', "'");
      $chunk: str-replace($chunk, "%", "%25");
      $chunk: str-replace($chunk, "&", "%26");
      $chunk: str-replace($chunk, "#", "%23");
      $chunk: str-replace($chunk, "{", "%7B");
      $chunk: str-replace($chunk, "}", "%7D");
      $chunk: str-replace($chunk, "<", "%3C");
      $chunk: str-replace($chunk, ">", "%3E");
  
      //
      //    The maybe list
      //
      //    Keep size and compile time down
      //    ... only add on documented fail
      //
      //  $chunk: str-replace($chunk, '|', '%7C');
      //  $chunk: str-replace($chunk, '[', '%5B');
      //  $chunk: str-replace($chunk, ']', '%5D');
      //  $chunk: str-replace($chunk, '^', '%5E');
      //  $chunk: str-replace($chunk, '`', '%60');
      //  $chunk: str-replace($chunk, ';', '%3B');
      //  $chunk: str-replace($chunk, '?', '%3F');
      //  $chunk: str-replace($chunk, ':', '%3A');
      //  $chunk: str-replace($chunk, '@', '%40');
      //  $chunk: str-replace($chunk, '=', '%3D');
  
      $encoded: #{$encoded}#{$chunk};
      $index: $index + $slice;
    }
    @return url("data:image/svg+xml,#{$encoded}");
  }
  
  //  Background svg mixin
  @mixin background-svg($svg) {
    background-image: svg-url($svg);
  }
  
  //  Helper function to replace characters in a string
  @function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @return if(
      $index,
      str-slice($string, 1, $index - 1) + $replace +
        str-replace(
          str-slice($string, $index + str-length($search)),
          $search,
          $replace
        ),
      $string
    );
  }